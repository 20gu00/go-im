github.com/gorilla/websocket
golang.org/x/net/websocket官方包

对ws请求进行鉴权,要有id,类似qq_id,和token

ws心跳机制:每30秒发送一次或者距离最近一次发送30s后发送一次


ws连接维护,用户id和连接进行映射

a发送数据给b:
1.a打开ws,路径/chat?id=xxx&token=yyy
2.后端开启鉴权,建立userid-websocket的映射
3.启用goroutine,通过conn.ReadMessage等待和读取消息
4.a发送json字符串消息,里面携带了目标用户的dstid
5.如果是群发,则分解群用户id
6.后端通过ClientMap[userid]获取目的用户的conn
7.conn.WriteMessage


----------单机性能优化---------
map频繁使用,这里还用到锁
map不要太大
优化系统最大文件数
降低json编码频次,减少对cpu资源的使用,一次编码多次使用
降低io资源的使用,合并写数据库次数,优化数据库度操作,能缓存最好,写数据库的时候会占用io资源,可以合并比如五秒在统一写进数据库
应用服务和资源服务分离,图片等文件服务放到云服务器上

